@model DatingApp.ViewModels.ProfileViewModel
@using Microsoft.AspNet.Identity
@using System.Drawing
@using System.IO

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div>
    <h4>Profile</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Profile.Presentation)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Profile.Presentation)
        </dd>
        <dt>
            Avatar
        </dt>
        <dd>
            @{
                if (Model.Profile != null && Model.Profile.Content != null)
                {
                    var base64 = Convert.ToBase64String(Model.Profile.Content);
                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                    <img src="@imgSrc" alt="avatar" height="100" width="100" />
                }
            }
        </dd>
    </dl>
</div>
<p>
    @{

        if (Url.RequestContext.RouteData.Values["id"].ToString() == User.Identity.GetUserId())
        {
            <button type="button" class="btn btn-default">@Html.ActionLink("Ändra lösenord", "ChangePassword", "Manage")</button>
            <button type="button" class="btn btn-default">@Html.ActionLink("Ändra profil", "EditProfile", "User")</button>
            <button type="button" class="btn btn-default">@Html.ActionLink("Mina vänner", "MyFriends", "User")</button>
        }
        else if (Url.RequestContext.RouteData.Values["id"].ToString() != User.Identity.GetUserId())
        {
            Model.Friend = new DomainLibrary.Models.Friend
            {
                RequestedBy_Id = User.Identity.GetUserId().ToString(),
                RequestedTo_Id = Url.RequestContext.RouteData.Values["id"].ToString()
            };

            if (Model.FriendState == DatingApp.ViewModels.FriendState.IsNotFriend)
            {
                using (Html.BeginForm("AddFriend", "User", new { id = Model.Friend.RequestedTo_Id }, FormMethod.Post))
                {
                @Html.HiddenFor(m => m.Friend.RequestedBy_Id)
                @Html.HiddenFor(m => m.Friend.RequestedTo_Id)

                <input type="submit" class="btn btn-default" value="Lägg till vän" />
                }
            }
            else if(Model.FriendState == DatingApp.ViewModels.FriendState.IsPending)
            {
                <button type="button" class="btn btn-default" disabled>Vänförfrågan skickad</button>
            }
            else if(Model.FriendState == DatingApp.ViewModels.FriendState.IsFriend)
            {
                <button type="button" class="btn btn-default" disabled>Vänner</button>
            }
        }


    }

</p>

<textarea rows="2" cols="50" id="txtPost" resize: none></textarea>
<button id="btnSend" class="btn btn-default">Skicka</button>
@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">
    
    $(document).on('click', '#btnSend', function () {

        var url = window.location.pathname;
        var receiver = url.substring(url.lastIndexOf('/') + 1);

        var mdl = { Content: $('#txtPost').val() }
        var prf = { Id: receiver }


        $.ajax({
            type: "POST",
            data: JSON.stringify({ message: mdl, profile: prf }),
            url: "/api/message/send",
            contentType: "application/json"
        }).done(function (prf) {
            $(".table").append("<tr><td>" + prf.Content + "</td><td>" + '@Model.ApplicationUser.UserName' + "</td></tr>");
        });
    });
        
</script>


<table class="table">
    <tr>
        <th>
            <p>Inlägg</p>
        </th>
        <th>
            <p>Skriven av</p>
        </th>
    </tr>
    @if (Model.Messages != null)
    {
        foreach (var item in Model.Messages)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    @Html.DisplayFor(model => model.ApplicationUser.UserName)
                </td>
            </tr>
        }
    }
</table>
